<launch>

    <!-- default args -->
    <arg name="nav_verbose" default="false" />
    <arg name="verbose" default="false" />
    <arg name="pilot_verbose" default="false" />
    <arg name="ctrl_config" default="sliding_open_loop.yaml" />
    <arg name="frame_odom" default="map" />
    <arg name="trajectory_update_rate" default="4"/>
    <arg name="trajectory_publish_rate" default="0.25"/>
    <arg name="veh_name" default="sphere_a"/>

    <!-- robot #A -->
    <group ns="$(arg veh_name)">
        <arg name="vehicle_urdf" value="$(find xacro)/xacro.py $(find simulator)/data/sphere.urdf.xacro name:=$(arg veh_name)_sim_ned"/>

        <rosparam command="load" file="$(find simulator)/conf/sp_params_$(arg veh_name).yaml"/>

        <include file="$(find simulator)/launch/vehicle_sim.launch">
        	<arg name="verbose" value="$(arg nav_verbose)"/>
            <arg name="frame_child" default="$(arg veh_name)_sim" />
        </include>

        <include file="$(find controller)/launch/control_open_loop.launch">
        	<arg name="verbose" value="$(arg pilot_verbose)"/>
        	<arg name="ctrl_config" value="$(arg ctrl_config)" />
        </include>


        <include file="$(find planning)/launch/path_sim.launch" />

        <node name="sensors_sim" pkg="simulator" type="sim_nav_sensors.py" output="screen">
            <param name="verbose" value="$(arg verbose)" type="bool"/>
            <param name="frame_odom" value="$(arg frame_odom)"/>
        </node>

        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
            <rosparam command="load" file="$(find navigation)/conf/ekf_parameters_template.yaml" />
           
        </node>

         <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server_sim" output="screen">
            <remap from="trajectory" to="trajectory_sim"/>
            <param name="target_frame_name" type="string" value="/map" />
            <param name="source_frame_name" type="string" value="/$(arg veh_name)_sim_ned" />
            <param name="trajectory_update_rate" type="double" value="$(arg trajectory_update_rate)" />
            <param name="trajectory_publish_rate" type="double" value="$(arg trajectory_publish_rate)" />
        </node> 

        <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server_sphere" output="screen">
            <param name="target_frame_name" type="string" value="/map" />
            <param name="source_frame_name" type="string" value="/$(arg veh_name)" />
            <param name="trajectory_update_rate" type="double" value="$(arg trajectory_update_rate)" />
            <param name="trajectory_publish_rate" type="double" value="$(arg trajectory_publish_rate)" />
        </node>

        <node pkg="utils" type="quat2euler.py" name="angleDebug" output="screen" />

        <!-- load the robot_description, used for rviz -->
        <param name="robot_description" command="$(arg vehicle_urdf)"/>
    </group>

</launch>

